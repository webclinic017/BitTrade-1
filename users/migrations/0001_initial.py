# Generated by Django 2.2.12 on 2021-10-24 10:05

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('quant', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('client_ip', models.CharField(blank=True, max_length=30, null=True, verbose_name='IP地址')),
                ('api_permissions', models.CharField(blank=True, max_length=200, null=True, verbose_name='接口权限')),
                ('spot_strategy', models.CharField(blank=True, max_length=30, null=True, verbose_name='现货策略')),
                ('api_key', models.CharField(blank=True, max_length=200, null=True, verbose_name='API KEY')),
                ('secret_key', models.CharField(blank=True, max_length=200, null=True, verbose_name='Secret KEY')),
                ('passphrase', models.CharField(blank=True, max_length=200, null=True, verbose_name='Passphrase')),
                ('nickname', models.CharField(max_length=30, null=True, verbose_name='昵称')),
                ('invitation_code', models.CharField(max_length=30, null=True, verbose_name='邀请码')),
                ('mobile', models.CharField(blank=True, max_length=20, null=True, verbose_name='手机号码')),
                ('openid', models.CharField(max_length=30, null=True, verbose_name='openid')),
                ('avatar', models.CharField(max_length=200, null=True, verbose_name='头像')),
                ('level', models.IntegerField(default=0, verbose_name='会员等级')),
                ('member_expire', models.DateTimeField(blank=True, null=True, verbose_name='会员到期时间')),
                ('remain_points', models.IntegerField(default=0, verbose_name='剩余积分')),
                ('exchange', models.CharField(blank=True, choices=[('binance', '币安现货'), ('binance_futures', '币安期货'), ('okex_spot', 'okex现货')], max_length=200, null=True, verbose_name='交易所')),
                ('is_kol', models.BooleanField(default=False, verbose_name='是否KOL')),
                ('is_vip', models.BooleanField(default=False, verbose_name='是否VIP')),
                ('usdt_unit', models.FloatField(default=0, verbose_name='现货资金分配')),
                ('swap_unit', models.FloatField(default=0, verbose_name='永续资金分配')),
                ('usdt_asset', models.FloatField(default=0, verbose_name='USDT资产')),
                ('spot_asset', models.FloatField(default=0, verbose_name='总资产估值')),
                ('sync_time', models.DateTimeField(blank=True, null=True, verbose_name='资产同步时间')),
                ('coins', models.ManyToManyField(blank=True, to='quant.Coin')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('inviter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invitees', to=settings.AUTH_USER_MODEL)),
                ('strategies', models.ManyToManyField(blank=True, to='quant.Strategy')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SmsCaptcha',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dial_code', models.CharField(default='86', max_length=10, verbose_name='国家手机代码')),
                ('mobile', models.CharField(blank=True, max_length=20, null=True, verbose_name='手机号码')),
                ('result', models.CharField(max_length=10, verbose_name='发送结果')),
                ('token', models.CharField(max_length=10, verbose_name='验证码')),
                ('scene', models.CharField(blank=True, max_length=10, null=True, verbose_name='场景')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '短信验证码',
                'verbose_name_plural': '短信验证码',
            },
        ),
        migrations.CreateModel(
            name='Withdraw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('pending', '进行中'), ('done', '已完成'), ('canceled', '已取消')], default='pending', max_length=20, verbose_name='状态')),
                ('points', models.FloatField(default=0, verbose_name='数量')),
                ('address', models.CharField(max_length=200, null=True, verbose_name='地址')),
                ('network', models.CharField(max_length=20, null=True, verbose_name='转账网络')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdraws', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '提现',
                'verbose_name_plural': '提现',
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0, verbose_name='奖励')),
                ('code', models.CharField(max_length=20, verbose_name='奖励事项')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户奖励',
                'verbose_name_plural': '用户奖励',
            },
        ),
        migrations.CreateModel(
            name='Following',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(default='m', max_length=30, verbose_name='周期')),
                ('deduct_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='扣除积分时间')),
                ('normal', models.BooleanField(default=True, verbose_name='状态')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('coin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coin_followings', to='quant.Coin')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_followings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '订阅',
                'verbose_name_plural': '订阅',
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identification', models.CharField(max_length=20, verbose_name='证件号码')),
                ('identification_type', models.IntegerField(default=0, verbose_name='证件类型')),
                ('name', models.CharField(max_length=20, verbose_name='真实姓名')),
                ('country', django_countries.fields.CountryField(max_length=2, null=True)),
                ('image1', models.CharField(max_length=200, verbose_name='正面照')),
                ('image2', models.CharField(max_length=200, verbose_name='反面照')),
                ('image3', models.CharField(max_length=200, verbose_name='手持照')),
                ('status', models.IntegerField(default=0, null=True, verbose_name='审核状态')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, null=True, verbose_name='添加时间')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '实名认证',
                'verbose_name_plural': '实名认证',
            },
        ),
        migrations.CreateModel(
            name='Billing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(blank=True, max_length=20, null=True, verbose_name='备注')),
                ('points', models.IntegerField(default=0, verbose_name='充值积分')),
                ('is_earnings', models.BooleanField(default=True, verbose_name='是否分佣')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='billings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '充值',
                'verbose_name_plural': '充值',
            },
        ),
    ]
